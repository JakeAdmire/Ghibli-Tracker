{"version":3,"sources":["media/favorite.svg","helpers/apiKey.js","helpers/fetch.js","Containers/App/Account/Account.js","actions/index.js","Components/CardContainer/Card/Card.js","Components/CardContainer/CardContainer.js","Components/Header/Header.js","Components/CardContainer/Card/Info/Info.js","Components/Loader/Loader.js","Containers/App/App.js","reducers/index.js","reducers/filmsReducer.js","reducers/filterReducer.js","reducers/userReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","key","fetchFilms","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","Error","stop","_x","apply","this","arguments","Account","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","name","value","setState","defineProperty","handleSubmit","preventDefault","formData","state","email","toLowerCase","validateUser","createUser","password","loggedIn","errorMessage","toggleSignUp","inherits","createClass","_validateUser","loginData","results","_args","length","undefined","fetchUser","loginUser","id","_createUser","_callee2","signupData","_args2","_context2","_fetchUser","_callee3","_context3","concat","method","headers","Content-Type","body","JSON","stringify","_x2","_this2","react_default","createElement","className","onClick","htmlFor","placeholder","type","onChange","required","react_router","to","Component","connect","dispatch","Card","toggleFavorite","_this$props","user","matchFound","help","forEach","film","movie_id","redirect","addFavorite","_this$props2","title","poster_path","release_date","vote_average","overview","user_id","deleteFavorite","_this$props3","determineFavorite","_callee4","_this$props4","_context4","split","slice","join","_this$props5","original_title","heartClass","description","buildDescription","style","backgroundImage","backgroundSize","react_router_dom","heart","films","finalCards","map","CardContainer_Card_Card","assign","Header","Info","console","log","Loader","App","buildCards","recentFilms","loading","addFilms","determineFavorites","showFaves","countFavorites","welcome","toUpperCase","faves","exact","path","component","CardContainer","render","_ref4","match","find","params","rootReducer","combineReducers","action","objectSpread","favorited","filter","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","es","Containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.799bdf5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite.ff2179cb.svg\";","export const key = '06195bd3d9278a83a0a3d0852d9b2d1b';","export const fetchFilms = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data\n  } catch(error) {\n    throw new Error('Response not okay');\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { loginUser } from '../../../actions';\n\nexport class Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      loggedIn: false,\n      errorMessage: '',\n      toggleSignUp: false\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    const formData = this.state;\n    formData.email = formData.email.toLowerCase();\n    if (value === 'Log In') {\n      this.validateUser('/api/users', formData);\n    }\n    if (value === 'Sign Up') {\n      this.createUser('/api/users/new', formData);\n    }\n  }\n\n  async validateUser(url = '', loginData = {}) {\n    try {\n      const results = await this.fetchUser(url, loginData);\n      this.props.loginUser(results.data.id, results.data.name);\n      this.setState({loggedIn: true})\n    } catch(error) {\n      this.setState({errorMessage: 'Sorry, you entered an incorrect email or password'})\n      }\n  }\n\n  async createUser(url = '', signupData = {}) {\n    try {\n      const results = await this.fetchUser(url, signupData);\n      this.props.loginUser(results.id, signupData.name); \n    } catch(error) {\n      throw new Error('user already exists');\n    }\n  }\n\n  async fetchUser(url, data) {\n    try {\n      const response = await fetch(`http://localhost:3000${url}`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data), \n      })\n      const results = await response.json();\n      return results;\n    } catch(error) {\n      throw new Error('Request unsuccessful')\n    }\n  }\n\n  render() {\n    return (\n      <div className='Account'>\n        {\n          !this.state.toggleSignUp ? \n            <form>\n              <div>\n                <button onClick={() => this.setState({toggleSignUp: true})}>Sign In</button>\n                <button className='disabled'>Create Account</button>\n              </div>\n              <label htmlFor='name'>Name:</label>\n              <input placeholder='Kim..' type='text' name='name' value={this.state.name} onChange={this.handleChange} required/>\n              <label htmlFor='email'>Email:</label>\n              <input placeholder='ex. kim@mail.com..' type='text' name='email' value={this.state.email} onChange={this.handleChange} required/>\n              <label htmlFor='password'>Password:</label>\n              <input placeholder='ex. floomples..' type='text' name='password' value={this.state.password} onChange={this.handleChange} required/>\n              <button className='submit' value=\"Sign Up\" onClick={this.handleSubmit}>SIGN UP</button>\n            </form> :\n            <form >\n              <div>\n                <button className='disabled'>Sign In</button>\n                <button onClick={() => this.setState({toggleSignUp: false})}>Create Account</button>\n              </div>\n              <label htmlFor='email'>Email:</label>\n              <input placeholder='ex. kim@mail.com..' type='text' name='email' value={this.state.email} onChange={this.handleChange} required/>\n              <label htmlFor='password'>Password:</label>\n              <input placeholder='ex. floomples..' type='text' name='password' value={this.state.password} onChange={this.handleChange} required/>\n              <button className='submit' value=\"Log In\" onClick={this.handleSubmit}>LOG IN</button>\n            </form>  \n        }\n        {\n          this.state.loggedIn && <Redirect to='/Ghibli-Tracker' />\n        }\n        {\n          this.state.errorMessage ? (\n            <div>{this.state.errorMessage}</div>\n          ) : (\n            <div>Please sign in or create an account</div>\n          )\n        }\n      \n      </div>\n    )\n  }\n}\n\n\nexport const mapDispatchToProps = (dispatch) => ({\n  loginUser: (id, name) => dispatch(loginUser(id, name)),\n})\n\nexport default connect(null, mapDispatchToProps)(Account);\n\nAccount.propTypes = {\n    loginUser: PropTypes.func\n}\n","export const toggleFavorited = (id) => ({\n  type: 'TOGGLE_FAVORITED',\n  id\n})\n\nexport const setFilter = (filter) => ({\n  type: 'SET_FILTER',\n  filter\n})\n\nexport const toggleInfo = (id) => ({\n  type: 'TOGGLE_INFO',\n  id\n})\n\nexport const addFilms = (films) => ({\n  type: 'ADD_FILMS',\n  films\n})\n\nexport const loginUser = (id, name) => ({\n  type: 'LOGIN_USER',\n  id,\n  name\n})\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as help from '../../../helpers/fetch';\nimport heart from '../../../media/favorite.svg'\n\nexport class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    }\n  }\n\n  toggleFavorite = async () => {\n    const { user, id } = this.props\n    let matchFound = false;\n    if (user.name) {\n      const results = await help.fetchFilms(`http://localhost:3000/api/users/${user.id}/favorites`);\n      results.data.forEach(film => {\n        if (film.movie_id === id) { matchFound = true }\n      })\n      let methodPrefix = matchFound ? 'delete' : 'add';\n      this[`${methodPrefix}Favorite`]();\n    } else {\n      this.setState({redirect: true});\n    }\n  }\n\n  addFavorite = async () => {\n    const { id, title, poster_path, release_date, vote_average, overview, user } = this.props\n    await fetch('http://localhost:3000/api/users/favorites/new', {\n      method: 'POST',\n      body: JSON.stringify({\n        user_id: user.id,\n        movie_id: id, \n        title, \n        poster_path,\n        release_date,\n        vote_average,\n        overview\n      }),\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n\n  deleteFavorite = async () => {\n    const { id, user } = this.props;\n    await fetch(`http://localhost:3000/api/users/${user.id}/favorites/${id}`, {\n      method: 'DELETE',\n      body: JSON.stringify({\n        movie_id: id, \n        user_id: user.id\n      }),\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n\n  determineFavorite = async () => {\n    const { id, user } = this.props\n    if (user.name) {\n      const results = await help.fetchFilms(`http://localhost:3000/api/users/${user.id}/favorites`);\n      return results.data.forEach(film => {\n        if (film.movie_id === id) return true; \n      })\n    }\n  }\n\n  buildDescription() {\n    const { overview } = this.props;\n    return overview.split('').slice(0, 40).join('') + '...';\n  }\n\n  render() {\n    const { poster_path, title, id, vote_average, original_title } = this.props;\n\n    let heartClass = this.determineFavorite() ? 'fave active' : 'fave';\n    let description = this.buildDescription();\n    let style = { \n      backgroundImage: `url(https://image.tmdb.org/t/p/w500${poster_path})`,\n      backgroundSize: 'cover'\n      }\n    return (\n      <div className=\"Card\" style={ style } >\n        <div className=\"screen\"></div>\n        <Link to={`/movies/${id}`}>\n          <h3 className=\"title\">{ title }</h3>\n          <p className=\"language\">{original_title}</p>\n          <p className=\"overview\">{description}</p>\n        </Link>\n        <p className=\"vote\"><span>{vote_average}</span>/10</p>\n        <object data={heart} type=\"image/svg+xml\" className={heartClass} onClick={this.toggleFavorite}>\n          Image not found\n        </object>\n        {\n          this.state.redirect && <Redirect to='/login' />\n        }\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps, null)(Card);","import React from 'react';\nimport Card from './Card/Card';\nimport { connect } from 'react-redux';\n\nexport function CardContainer(props) {\n  \n  const { films } = props;\n  const finalCards = films.map((film) => {\n    return <Card key={film.id} {...film} />\n  }) \n\n  return (\n    <div className=\"CardContainer\">\n      { finalCards }\n    </div>\n  )\n\n}\n\nexport const mapStateToProps = (state) => ({\n  films: state.films\n})\n\nexport default connect(mapStateToProps, null)(CardContainer)","import React from 'react';\n\nexport function Header() {\n\n  return (\n    <div className=\"Header\">\n      <h1>GhibliTracker</h1>\n    </div>\n  )\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Info(props) {\n  console.log(props)\n  return (\n    <div>\n      <h1>{props.title}</h1><p>{props.vote_average}/10</p>\n      <h2>{props.original_title}</h2>\n      <p>{props.release_date}</p>\n      <p>{props.overview}</p> \n    </div>\n  )\n}\n\nInfo.propTypes = {\n  props: PropTypes.object.isRequired\n}\n","import React from 'react';\n\nexport default function Loader() {\n  return (\n    <h2>Loading...</h2>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { key } from '../../helpers/apiKey';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as help from '../../helpers/fetch';\nimport Account from './Account/Account';\nimport CardContainer from '../../Components/CardContainer/CardContainer';\nimport { Header } from '../../Components/Header/Header';\nimport { Info } from '../../Components/CardContainer/Card/Info/Info';\nimport { addFilms } from '../../actions';\nimport Loader from '../../Components/Loader/Loader';\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    this.buildCards()\n  }\n\n  buildCards = async() => {\n    this.setState({loading: true});\n    let url = `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_companies=10342`;\n    const recentFilms = await help.fetchFilms(url);\n    this.props.addFilms(recentFilms.results)\n    this.setState({loading: false});\n  }\n\n  determineFavorites = async () => {\n    const { user } = this.props\n    if (user.name) {\n      const results = await help.fetchFilms(`http://localhost:3000/api/users/${user.id}/favorites`);\n      if (JSON.stringify(this.props.films) === JSON.stringify(results.data)) {\n        this.buildCards();\n      } else {\n        this.props.addFilms(results.data);\n        this.setState({showFaves: true});\n      }\n    } else {\n      this.setState({redirect: true})\n    }\n  }\n\n  countFavorites = async () => {\n    const { user } = this.props;\n    const results = user.name && await help.fetchFilms(`http://localhost:3000/api/users/${user.id}/favorites`);\n    // return user.name ? 'FAVES' + '(' + results.data.length + ')' : 'FAVES(0)';\n    return user.name ? `FAVES(${results.data.length})` : 'FAVES(0)';\n  }\n\n  render() {\n    const { user } = this.props;\n    let welcome = user.name ? `WELCOME ${user.name.toUpperCase()}` : 'LOG IN';\n    let faves = this.countFavorites();\n    console.log(faves);\n    return (\n      <div className=\"App\">\n        <Header />\n        <NavLink to='/login' className=\"login\">{welcome}</NavLink>\n        <button className=\"show-faves\" onClick={this.determineFavorites}>FAVES</button>\n        {\n          this.state.loading ? <Loader /> : <Route exact path='/Ghibli-Tracker' component={CardContainer} />\n        }\n        <Route exact path='/login' component={Account} />\n        <Route path='/movies/:id' render={ ({match}) => {\n          const film = this.props.films.find(film => film.id === match.params.id);\n          if (film) { return <Info {...film} /> }\n        } }/>\n        <Route exact path='/Ghibli-Tracker' render={() => {\n          if (this.state.redirect) return <Redirect to='/login' />\n          if (this.state.showFaves) return <Redirect to='/favorites' />\n        }} />\n        <Route exact path='/favorites' component={CardContainer} />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  films: state.films,\n  user: state.user\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  addFilms: (films) => dispatch(addFilms(films))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\nApp.propTypes = {\n  addFilms: PropTypes.func.isRequired,\n  films: PropTypes.array,\n  user: PropTypes.object\n}\n","import { combineReducers } from \"redux\";\nimport { filmsReducer } from \"./filmsReducer\";\nimport { filterReducer } from \"./filterReducer\";\nimport { userReducer } from \"./userReducer\";\n\nexport const rootReducer = combineReducers ({\n  films: filmsReducer,\n  filter: filterReducer,\n  user: userReducer\n})","export const filmsReducer = (state = [], action) => {\n  switch(action.type) {\n\n    case('ADD_FILMS'):\n      return action.films\n\n    case('TOGGLE_FAVORITED'):\n      return state.map(film => {\n        if (film.id === action.id) {\n          return {...film, favorited: !film.favorited}\n        } else {\n          return film;\n        }\n      })\n\n    default:\n      return state;\n  }\n}","export const filterReducer = (state = 'Show all', action) => {\n  switch(action.type) {\n\n    case('SET_FILTER'):\n      return action.filter;\n\n    default:\n      return state;\n  }\n}","export const userReducer = (state = {}, action) => {\n  switch(action.type) {\n\n    case('LOGIN_USER'):\n      return {...state, \n        id: action.id,\n        name: action.name\n      }\n\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Containers/App/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './reducers/index';\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App /> \n    </BrowserRouter>\n  </Provider>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}